+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
+-+-+-+-+-+-+-+-Python作業メモ+-+-+-+-+-+-+-+-
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


■エラー



コマンド
SELECT SUBSTRING_INDEX(USER(), '@', -1) AS ip,  @@hostname as hostname, @@port as port, DATABASE() as current_database;

●結果
+-----------+-----------------+------+------------------+
| ip        | hostname        | port | current_database |
+-----------+-----------------+------+------------------+
| localhost | DESKTOP-O7LN1A9 | 3306 | NULL             |
+-----------+-----------------+------+------------------+
1 row in set (0.04 sec)

https://docs.microsoft.com/ja-jp/power-bi/connect-data/service-gateway-custom-connectors


■ショートカット


■課題

課題①：
分裂の場合軸で分裂させるので、切り方によっては飛び地ができてしまう
→飛び地ができる場合は、地方を解脱させる処理を実装（TODO）


課題②：
国０から作成する場合の考慮→国⓪の場合は場合分けで国の有無判定
ex:
x = 50, y = 70, 縦60, 横100が入力され、新規作成ボタンが押された場合の処理を検討
→x - 横/2 = 0
→y - 縦/2 = 40
左上頂点→(0, 40) >= (0, 0)
→x + 横/2 = 100
→y + 縦/2 = 100
右下頂点→(100, 100) <= (1440, 900)

最大面積は横1440、縦900とする


課題④：
データ作成済み→マップに投射、国を一つのまとまりとして考える難点あり→まとめてフォーカスを設定
→エリア間すべてにフォーカスが当たるのでチェック柄の図形になりそう
→可変長引数の扱いhttps://note.nkmk.me/python-argument-expand/
→*, ** を使うことで引数内でリスト、タプル、辞書型を展開することが可能

課題⑤：
ドラッグアンドドロップで図形を作成→マップを作成したい
→ドラドロhttps://water2litter.net/rum/post/python_tkinter_canvas_position/参照

→https://www.tutorialspoint.com/vba/vba_excel_macros.htm画面の明るさを設定することはできない
→Canvasが図形特化なのでこちらを採用
http://bacspot.dip.jp/virtual_link/www/si.musashi-tech.ac.jp/new_www/Python_IntroTkinter/03/index-4.html#chap04
→Button1ではなくButton-1が正
→開始座標、終了座標の設定が可能に！→次回ドラドロに合わせて図形を描画
→https://water2litter.net/rum/post/python_tkinter_canvas_rectangle_modification/
→上記を参考、図形の再描画がカクつく→stop_x,stop_yの座標のtraceを実施していたため
　→trace処理をカット。
　
課題⑥：
ドラドロで取得した長方形図形の座標でループ→foreachが2重になるので処理の軽量化を実施したい
→concurrent.futureがpython3.2以降登場

課題㉖：
ゲームロード時表示されるデータがDbから取得されていない。（DATA_1などsetting.csから定数を取得している）

課題㉗：
ロード時の選択プレーヤーネームとsignupやloadボタンが同列に表示されてしまう
→プレーヤーネームの表示はload_game選択時にプルダウンで表示する
→メニュー項目格納候補→

課題㉘：
キャラメイク画面のバグを解消

課題㉙：
キャラメイクと種族作成画面の互換性、子画面のupdFlgがtrueの場合親画面を更新する必要

●python
コンボボックスとドロップダウン、何が異なるのか
→

●powerapps
・メモ
→バグは多いけど、成果大きい、
→進捗率は高め
→コレクション同士であれば、AddColumnsで結合のようなデータ利用が可能
→カラム名が結合先と重複した場合はShowColumnsなどで別名にする必要がある

・powerapps課題
→スクレイピング、バッチ処理などAzureが利用できるのかどうか
→pythonでスクレイピングした結果をJSON形式などでデータの共有ができるのかどうか
　→マップで住所検索したときの座標をbingマップ（キーあり）に設定してマップ画像、最短距離などを取得したい
→グラフ作成forループが使えないので非常に使いづらい
→生産性は高いが、簡単なループがforAllのみなので一部非常に使いづらい

→gallraryの色
　→背景色を設定するプロパティとしては通常Fillプロパティを使いますが、FillプロパティではIf分を使って関数を定義することができません。

■メモ
★python技術
①イベント後エラーメッセージを指定の場所に表示可能
→ファンクションでgird配置指定で生成する（Validateを走らせた後実行有無を判定）

★クラス
・Player
　●コマンド
　①上下左右
　②スタートボタン→上下左右

・プラットフォーム
　●メソッド
　①描写
　②天候、風、イベント等

・sprites
　●コマンド
　①攻撃（敵）

・object
　●コマンド
　①ポップ表示（名称）
　②効果音

★王国新規登録前【必要情報】
・王国名
・王都名
・国王名、国王id
・


★要件
Displayの作成
ログイン→ホーム画面でキャラクター選択
→初期画面
①主人公データ読み込み
・キャラクタ、種族、遺伝子、地域、ダンジョン等マスタ取得
・左上にステータス表示
・描画を一度で済ます？

②表示（Spritesシート）
・キャラクタ、アニメーション３D
→SpritesシートPlayerクラス実装
・周りのオブジェクト
→SpritesシートBuildingクラス実装？？
・NPC、敵
→SpritesシートMobクラス実装
・シンボル
→SpritesシートSymbolクラス実装

③プラットフォーム（Platformシート）
〇表示範囲
→拡大可能、ライキン参考、上から視点、町は家など建物
〇表示物
→視点移動時は地面と木だけの描写、操作停止時にオブジェクトを描画する
〇再描画
→プレイヤーコマンド選択時

④操作
・十字キー移動
→視点移動、キャラ移動（キャラにフォーカス時）
・

最初は地方という単位もない
国を作った瞬間に座標がすべて登録される

絶対値を求めるときはabs関数
y = abs(-5)
→5になる

★王国新規作成
→テストもかねてランダム生成を可能にする
　→資源テーブルを作成、常に農地、鉱山ではないので動的に遷移する要素あり
　→鉱山は高地に分布しやすい
　→プレイヤーはいるだけで採取可能、手動で採掘することも可能
　→各地に資源を分配
　→ポイントとしては高原地域
　→建物はほとんど作成しない（王都の政庁のみ）
　→高さはデータ作成後の編集処理で実施
　　→最高到達点がランダムで生成されたとする、高さはランダム
　　→高→低への遷移の仕組み（角度を調整して極端な減少値を防ぐ制御が必要
　　→隣り合うセルで高さを調整する
　　　ex.セルの減少の仕組み
　　　…０１２３
　　　…１２３４
　　　…２３４⑤４３２⑦
　　　　…………
　　別の最高点⑦が存在した場合
　　　…２３４⑤４５６⑦
　　上記のような高度に再編集される高さの偏りによっては全ての領地が再編集の対象になるかもしれない
　　→処理量はかなり多いが、x,y,zがすべて存在するので3Dマッピングも可能になる
　　→DBはMySQLなので別のシステムを構築した際も流用することが可能
　　→最高点を中心として上下左右に1ずつ減少させて高度を分布させる

★9月案件メモ
PowerAppsを無料30日トライアル
→MySQLの接続でエラー
→

■8月～PJマップ作製GUI
★要件
・マップを作成したい
・マップ構成→登録先（fields,locations,areas,spots)

→採掘、農場ポイントはランダムに点在している（spotごと）
→スポットはランダムに変動する（バッチで操作）
→採取スポットのレベルは高い土地と低い土地が存在する
→採取スポットが高い土地は生産性が高い
→スポットを等高線図で視覚的に表示できるとよい
→天気図も欲しいかもしれない
→ポイント準拠ではない
→土地の高さ、川の必要性
→地方ごとに土地の傾斜を決めてあげることで計算による平均傾斜の割り出しが可能
→傾斜は定数、最高点の数、それぞれの高さと平地の数で決定する
→それぞれのスポットの高さは、最高到達点との距離、と傾斜で三角比から求めた最高点となる
→傾斜以外は平地とする、平均高度から逆算することもおそらく可能と思われる
→最高高度→準最高... というように高度を決めていく必要がある、高度の決め方は不明。地学は知らない
→あるいはデータ分析DeepLearningでデータの扱い方を学ぶか。
・一度DeepLearningに戻る必要がある
→高度を決めると川を作成可能。川のふもとには人里が作成可能
→川は海まで流れる。高度に比例して流水量を決定する
→流路は基本的に高→低に流れる、平地では直線で海まで（演算難易度高）


・マップ部５：８の長方形型→世界地図とするタッチすることで一部を拡大可能？
・ドラッグでマップを移動可能（スマホの場合スワイプ）？
・クリックで選択個所を編集可能→地方のマップ、ドラッグで建築物の移動等が可能
・左下で選択した地方を右上に表示
・川の流路編集？
・川は分岐する→流量に比例
・気温、偏西風等、寒い地域の人種、
→寒冷地：技術力が発展、温暖：バランスよく発展、南地域：農場が発展、砂漠地帯：身体能力が発展
→登録処理はDELETE/INSERTのみ
・登録先は王国、地方、スポットの3種類
→登録方法は地形登録（スポット）のみ

〇王国作成手順追加
　【課題】
　パターンが小手先感が強めでマップ作製が感覚的にできなさそう
　・何をどのように実装するか
　・道と建物・・・地区単位で道を血続きにすること、ルールが必要
　→道は5の倍数とする（共通事項）
　→ImageDrawでMapを作成
　・領土の結合、分裂：奪った土地を結合する
　→結合：地方同士、王国同士、戦争で勝利すると融合、内部同士の場合は一定条件で結合可能
　→分裂：上に同じ、ストレスがたまると分裂
　→マップは緯度経度で計算してもよかったのかもしれない、この場合下位→上位とレベルを上げていく
　　作成方法なので今とは真逆の方法になってしまう？
　EX
　●鍛冶屋
　→鍛冶屋、教会等すべてマスタ分けするかどうか、
　→鍛冶屋項目→武具作成が可能（鍛冶F-SSS）鍛冶屋の大金の使い道
　　→ランク上げに必要、従業員の育成、
　　→従業員のランク上げに必要
　　→強力な武具を作成可能、（TODO：アイテムを所持、使用可能なようにする）
　●教会
　→鍛冶屋があると戦争で有利になる、戦争時部隊にバフがかかる
　→教会あり→キャラクターのクラスを変更可能ランク別、
　→大金の使い道
　　→ランク上げ、維持費、従業員の育成、サブ拠点の作成
　　→けがをしたときの治療が早くなる→回転が速くなる
　●ギルド
　→戦争で有利になる、ギルドランクを発行、ギルド員をサポート
　→ギルド員はダンジョンに挑戦することが可能、ギルド員はパーティを作成可能
　　→ギルドランクが上がるほど取得経験値量が増える
　　→ギルド員の行動量が増える（モチベーション的な意味で）

■TODO：DB
・locationsに王都フラグを追加、侵略時はこれの有無が必要
・locations,spotsはワークテーブルを実装
・spotsの上位テーブル追加（locations以下）


■次回
・命名機能の処理の修正→DBへの登録を極力少なめに、処理が遅いので早めに
・あらかじめテーブルデータを取得しておく
→存在するデータはすべて更新に回す、メモリ上で保持しておく。
→存在しないデータは、出現回数等も含めて、メモリ上で保持しておく。

・高さはひとまず考慮しない、それ以外の部分でランダム作成。
→ただの更地を作成しても味気ない
→

