+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
+-+-+-+-+-+-+-+-Python作業メモ+-+-+-+-+-+-+-+-
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


■エラー

■ショートカット


■課題

課題①：
分裂の場合軸で分裂させるので、切り方によっては飛び地ができてしまう
→飛び地ができる場合は、地方を解脱させる処理を実装（TODO）


課題②：
国０から作成する場合の考慮→国⓪の場合は場合分けで国の有無判定
ex:
x = 50, y = 70, 縦60, 横100が入力され、新規作成ボタンが押された場合の処理を検討
→x - 横/2 = 0
→y - 縦/2 = 40
左上頂点→(0, 40) >= (0, 0)
→x + 横/2 = 100
→y + 縦/2 = 100
右下頂点→(100, 100) <= (1440, 900)

最大面積は横1440、縦900とする


課題④：
データ作成済み→マップに投射、国を一つのまとまりとして考える難点あり→まとめてフォーカスを設定
→エリア間すべてにフォーカスが当たるのでチェック柄の図形になりそう
→可変長引数の扱いhttps://note.nkmk.me/python-argument-expand/
→*, ** を使うことで引数内でリスト、タプル、辞書型を展開することが可能

課題⑤：
ドラッグアンドドロップで図形を作成→マップを作成したい
→ドラドロhttps://water2litter.net/rum/post/python_tkinter_canvas_position/参照

→https://www.tutorialspoint.com/vba/vba_excel_macros.htm画面の明るさを設定することはできない
→Canvasが図形特化なのでこちらを採用
http://bacspot.dip.jp/virtual_link/www/si.musashi-tech.ac.jp/new_www/Python_IntroTkinter/03/index-4.html#chap04
→Button1ではなくButton-1が正
→開始座標、終了座標の設定が可能に！→次回ドラドロに合わせて図形を描画
→https://water2litter.net/rum/post/python_tkinter_canvas_rectangle_modification/
→上記を参考、図形の再描画がカクつく→stop_x,stop_yの座標のtraceを実施していたため
　→trace処理をカット。

課題㉟：
名称取得処理に時間がかかっているので時間短縮したい→並列処理で実行→数秒で登録完了できるはず
→スレッドセーフを保つ必要があるため、インサート、アップデートは分ける必要があるかもしれない
　→全名称取得→名称が存在しないもののみInsert→存在するデータ→まとめてアップデート（余力があれば）

課題㊱：
画面フォーム入力による登録情報の編集、どこまで
ログイン画面→データにログイン情報格納？これは別課題
→国名、国王、国ランク：G？
→軍事力や富の集中具合でランクを総合的に決定する
　→総合的に決定する指標が欲しい、登録段階である程度ランクを決定可能
　　→最初はほかに地方が設定されていないので、富や軍事力は王都に集中させることとする
　国力の指標、これは序盤は漠然と平均的に決定してよい
　とはいえランクSSSに設定した場合、登録処理で王都だけで国力のすべてをまかなっている状態
　地方の力も総合的な要素なので面積比による国力の相対的数値もランクに反映している必要がある
　地方と王都の総力＝国の総力なので半々くらいに
総合力GDPは戦力power、福祉welfare、技術力technology、兵力militaryで決定
GDPがそのままランクに反映される

課題㊲：
ランクと数値とarea単位データのアルゴリズムの作成
固定ステータス←決定（固有ステータスの方が評価しやすいため）
p:50000, w:50000, t:50000, m:50000の場合
算出方法
・使用可能上限を設定
・強い建物を強い順で取得した総計

状態ステータス
h:40000, st:40000, a:40000
・作成時に大して意味をなさないので自由に

指向ステータス
c:10000→welfare?, i:10000→technology?, strength:10000→power?, pop→military
・関係性あり

GDP
g:90000
・直に決定

最終基準値（適当）

SSS：500000000
SS:50000000
S:10000000
A:2500000
B:1000000
C:450000
D:150000
E:62500
F:12500

追加DB項目
→total,→

ランダムの場合まず、基本4パラメータの倍率を決定
基本P
p:50000, w:50000, t:50000, m:50000×（人口比なので無効）
→これらは
特殊P
i:30000, a:50000（必ずしも人口比ではない）

c:1-25
→単純倍率、上記パラメータで足りなければこちらをループで上昇させてもよい
→最初に決定しておく方法もある

課題㊶：
ThreadPoolExecutorが機能していない

課題㊹：
APIの作成：python＋カスタムコネクタ

課題㊻：
登録したデータをマップ出力→色付け
→無限ループに入る模様、正直思った通り
　→

課題㊼：
描画した長方形がどこの処理かわかりずらい、この課題txtも同じ
self.pw_map.coords

課題①：OK
上書きでマップデータを作成した場合に、現在の領地を上書きするか、浸食されるか

↓tkinterでゲームを作成している人
https://stackoverrun.com/ja/q/11976573

numpyで重複分の処理を実施
↓sklearn+numpy
https://qiita.com/futakuchi0117/items/edc0ed05eee4eb52f717

課題③：OK
while処理で複雑図形を読み込んだ場合無限ループ

課題④：OK
上書き処理が甘い、location_idなどは細かく設定してあげる必要がある

↓UPDATEBULKの方法
https://tokibito.hatenablog.com/entry/20160128/1453914673

課題の解消
が同じ値を列挙してしまう点
self.kingdom_grid[dkey]['horn']
ポイント
①開始位置は間違いではない
②開始位置と、固定一の2種類しか存在しない点
set(self.kingdom_grid[dkey]['horn'])
set(<LIST>)で確認→{(277, 81), (245, 81)}
③なぜか飛び版が設定されている
④一応無限ループ対策としてwhile条件に本体の座標の総数を超える場合強制的にループを外れるように設定

★解決
1.デバッグ結果：構文ミス→if→elif
2.ext_cntの西と南がハチャメチャだった。

課題⑤：OK
update処理概要に遅い
正常終了は確認したが3分近くかかっている→delete/insertに変更すべし
リスト内のデータを一括編集が可能
https://qiita.com/sskyh/items/a444627f08ce4c9c04b2
やっぱりpythonは最高だぜ

→かなり時間がかかったが、delete/insertに変更して十分に早くなった（数十秒ほど）

課題⑥：OK
重複登録でなぜかデータがすべて消える
→超致命的、どういうこと？
→deleteの条件、両端の大小比較は不可

課題⑦：OK
連続登録ができない
→select.kingdom_gridを登録後初期化していないため、データが重複してしまっていた
　（重複なしで連続登録したときに、なぜか重複判定がされていたため）
　→完璧にはまった！天才
　
課題⑧：
重複登録した場合、境界線がいびつに見える、むっくり

課題⑨：


●python
コンボボックスとドロップダウン、何が異なるのか
→

●powerapps
・メモ
→バグは多いけど、成果大きい、
→生産性は高め
→コレクション同士であれば、AddColumnsで結合のようなデータ利用が可能
→カラム名が結合先と重複した場合はShowColumnsなどで別名にする必要がある

・powerapps課題
→スクレイピング、バッチ処理などAzureが利用できるのかどうか
→pythonでスクレイピングした結果をJSON形式などでデータの共有ができるのかどうか
　→マップで住所検索したときの座標をbingマップ（キーあり）に設定してマップ画像、最短距離などを取得したい
→グラフ作成forループが使えないので非常に使いづらい
→生産性は高いが、簡単なループがforAllのみなので一部非常に使いづらい

→gallraryの色
　→背景色を設定するプロパティとしては通常Fillプロパティを使いますが、FillプロパティではIf分を使って関数を定義することができません。

■メモ
★python技術
①イベント後エラーメッセージを指定の場所に表示可能
→ファンクションでgird配置指定で生成する（Validateを走らせた後実行有無を判定）

★クラス
・Player
　●コマンド
　①上下左右
　②スタートボタン→上下左右

・プラットフォーム
　●メソッド
　①描写
　②天候、風、イベント等

・sprites
　●コマンド
　①攻撃（敵）

・object
　●コマンド
　①ポップ表示（名称）
　②効果音

★王国新規登録前【必要情報】
・王国名
・王都名
・国王名、国王id
・


★要件
Displayの作成
ログイン→ホーム画面でキャラクター選択
→初期画面
①主人公データ読み込み
・キャラクタ、種族、遺伝子、地域、ダンジョン等マスタ取得
・左上にステータス表示
・描画を一度で済ます？

②表示（Spritesシート）
・キャラクタ、アニメーション３D
→SpritesシートPlayerクラス実装
・周りのオブジェクト
→SpritesシートBuildingクラス実装？？
・NPC、敵
→SpritesシートMobクラス実装
・シンボル
→SpritesシートSymbolクラス実装

③プラットフォーム（Platformシート）
〇表示範囲
→拡大可能、ライキン参考、上から視点、町は家など建物
〇表示物
→視点移動時は地面と木だけの描写、操作停止時にオブジェクトを描画する
〇再描画
→プレイヤーコマンド選択時

④操作
・十字キー移動
→視点移動、キャラ移動（キャラにフォーカス時）
・

最初は地方という単位もない
国を作った瞬間に座標がすべて登録される

絶対値を求めるときはabs関数
y = abs(-5)
→5になる

★王国新規作成
→テストもかねてランダム生成を可能にする
　→資源テーブルを作成、常に農地、鉱山ではないので動的に遷移する要素あり
　→鉱山は高地に分布しやすい
　→プレイヤーはいるだけで採取可能、手動で採掘することも可能
　→各地に資源を分配
　→ポイントとしては高原地域
　→建物はほとんど作成しない（王都の政庁のみ）
　→高さはデータ作成後の編集処理で実施
　　→最高到達点がランダムで生成されたとする、高さはランダム
　　→高→低への遷移の仕組み（角度を調整して極端な減少値を防ぐ制御が必要
　　→隣り合うセルで高さを調整する
　　　ex.セルの減少の仕組み
　　　…０１２３
　　　…１２３４
　　　…２３４⑤４３２⑦
　　　　…………
　　別の最高点⑦が存在した場合
　　　…２３４⑤４５６⑦
　　上記のような高度に再編集される高さの偏りによっては全ての領地が再編集の対象になるかもしれない
　　→処理量はかなり多いが、x,y,zがすべて存在するので3Dマッピングも可能になる
　　→DBはMySQLなので別のシステムを構築した際も流用することが可能
　　→最高点を中心として上下左右に1ずつ減少させて高度を分布させる

★9月案件メモ
PowerAppsを無料30日トライアル
→MySQLの接続でエラー
→

■8月～PJマップ作製GUI
★要件
・マップを作成したい
・マップ構成→登録先（fields,locations,areas,spots)

→採掘、農場ポイントはランダムに点在している（spotごと）
→スポットはランダムに変動する（バッチで操作）
→採取スポットのレベルは高い土地と低い土地が存在する
→採取スポットが高い土地は生産性が高い
→スポットを等高線図で視覚的に表示できるとよい
→天気図も欲しいかもしれない
→ポイント準拠ではない
→土地の高さ、川の必要性
→地方ごとに土地の傾斜を決めてあげることで計算による平均傾斜の割り出しが可能
→傾斜は定数、最高点の数、それぞれの高さと平地の数で決定する
→それぞれのスポットの高さは、最高到達点との距離、と傾斜で三角比から求めた最高点となる
→傾斜以外は平地とする、平均高度から逆算することもおそらく可能と思われる
→最高高度→準最高... というように高度を決めていく必要がある、高度の決め方は不明。地学は知らない
→あるいはデータ分析DeepLearningでデータの扱い方を学ぶか。
・一度DeepLearningに戻る必要がある
→高度を決めると川を作成可能。川のふもとには人里が作成可能
→川は海まで流れる。高度に比例して流水量を決定する
→流路は基本的に高→低に流れる、平地では直線で海まで（演算難易度高）


・マップ部５：８の長方形型→世界地図とするタッチすることで一部を拡大可能？
・ドラッグでマップを移動可能（スマホの場合スワイプ）？
・クリックで選択個所を編集可能→地方のマップ、ドラッグで建築物の移動等が可能
・左下で選択した地方を右上に表示
・川の流路編集？
・川は分岐する→流量に比例
・気温、偏西風等、寒い地域の人種、
→寒冷地：技術力が発展、温暖：バランスよく発展、南地域：農場が発展、砂漠地帯：身体能力が発展
→登録処理はDELETE/INSERTのみ
・登録先は王国、地方、スポットの3種類
→登録方法は地形登録（スポット）のみ	



〇王国作成手順追加
　【課題】
　パターンが小手先感が強めでマップ作製が感覚的にできなさそう
　・何をどのように実装するか
　・道と建物・・・地区単位で道を血続きにすること、ルールが必要
　→道は5の倍数とする（共通事項）
　→ImageDrawでMapを作成
　・領土の結合、分裂：奪った土地を結合する
　→結合：地方同士、王国同士、戦争で勝利すると融合、内部同士の場合は一定条件で結合可能
　→分裂：上に同じ、ストレスがたまると分裂
　→マップは緯度経度で計算してもよかったのかもしれない、この場合下位→上位とレベルを上げていく
　　作成方法なので今とは真逆の方法になってしまう？
　EX
　●鍛冶屋
　→鍛冶屋、教会等すべてマスタ分けするかどうか、
　→鍛冶屋項目→武具作成が可能（鍛冶F-SSS）鍛冶屋の大金の使い道
　　→ランク上げに必要、従業員の育成、
　　→従業員のランク上げに必要
　　→強力な武具を作成可能、（TODO：アイテムを所持、使用可能なようにする）
　●教会
　→鍛冶屋があると戦争で有利になる、戦争時部隊にバフがかかる
　→教会あり→キャラクターのクラスを変更可能ランク別、
　→大金の使い道
　　→ランク上げ、維持費、従業員の育成、サブ拠点の作成
　　→けがをしたときの治療が早くなる→回転が速くなる
　●ギルド
　→戦争で有利になる、ギルドランクを発行、ギルド員をサポート
　→ギルド員はダンジョンに挑戦することが可能、ギルド員はパーティを作成可能
　　→ギルドランクが上がるほど取得経験値量が増える
　　→ギルド員の行動量が増える（モチベーション的な意味で）

■TODO：DB
・locationsに王都フラグを追加、侵略時はこれの有無が必要
・locations,spotsはワークテーブルを実装
・spotsの上位テーブル追加（locations以下）


■次回

・高さはひとまず考慮しない、それ以外の部分でランダム作成。
→ただの更地を作成しても味気ない

・        # 種族選択とかをカット

10/14今日の進捗

アプリをインストール
→側だけ、DBはHTTP送信
　例：ガルパ→1曲終了のタイミングで送信、POST
　RPGで言えばバトル終了後にPOST、それ以外はアプリ内でもにょもにょ（制御部分）
　キャラのレベルアップでPOSTというように
　WEBサーバー情報はどこまで開示するか、
　→考慮中、現在作成中のアプリケーションはバックオフィスアプリであることに気づく
　→今までのソフトウェアはバックオフィス側のアプリケーションだったことになる
　　→そう考えると直接データを操作できないクライアント側のWEBアプリケーション？ポータルサイトは
　　少し厄介であることがわかる

10/23
→再アクティブ化を試してみる、ステータスが無効になっていたので
→csvの行間になぜか空行がある
→固有ページの編集はelementorから、結構自由度が高いので好きに編集可能

ページビルダーの利用
http://giphe0901.wp.xdomain.jp/staff-instructor/
→スライドができるかどうか調査
　　
10/24 Azure AD - MS Graph利用
アプリ登録→許可と証明書作成→クライアントシークレット作成→アクセストークンの生成
https://qiita.com/massie_g/items/fe7540161aa4a5f86bf5
curlうまくいかないので断念

https://graph.microsoft.com/beta/groups?$filter=resourceProvisioningOptions/Any(x:x eq ‘Team’)
→英語サイトだけど詳しく手順が記載されている
→管理者の同意がなければアクセスできないAzure AD

→サイトIDの取得
https://stackoverflow.com/questions/45406451/how-can-i-get-the-siteid-of-the-current-site-with-microsoft-graph-api
×

→共有ファイルはこっちが正
https://docs.microsoft.com/ja-jp/graph/api/shares-get?view=graph-rest-1.0&tabs=http


■進捗
・python#8投稿
→今回はマップ作製機能
→キャラクター登録処理→なぜエラーに？

→10/10目標
　azureを使いこなす
　・cosmos dbへ画像の登録、
　
10/22azure
サブスクリプション関連→cosmos dbアカウント作成時に無効と表示されてしまう
→https://rikupapa-shima.hatenablog.com/entry/2019/07/03/051258
→テクニカルサポート圏から外れるようにする（一般ユーザでもcosmosはFree tierで無料で利用可能）
→なぜかAzure subscription1が認識されていなかったよう。
→サブスクリプションを無効にしたとたんに認識→ReadOnlyエラー、おそらく前者が理由

30分といわず4時間後、サブスクリプションが有効に戻っていた、アカウントを作成する

・BeaverBuilderにはアドオンAddonというものがあるらしい、プラグインをさらに有効に使える便利な機能
→最高のシームレスでした

・PowerApps→作成したアプリがすべて消えてしまっていた、ショック


★概要設計スケッチ要件まとめ
・スマホから簡単にランダムでガチャができるように（演出はPA？）
→ゲーム機能ではないので、単純にロジックだけ。実装検証
→メインはフローの実装、pythonロジックをカスタムコネクタに実装HTTPでcosmos dbにデータを投げる
→機能はcharacter作成, mapデータ調整（ステータスとかいろいろ）とりあえず
→オンプレミスが使えるので一覧として表示するのもあり、死亡とそうでないもののステータスなど
→データ件数が多くなってきた場合、いきなりゴリゴリバックオフィスを進める必要がないよう対策
→powerアプリはあくまで検証用、使い勝手などを確かめてからpythonで実装
→pythonではHTTP通信を実施するのでそのあたりの知識を勉強する
→いよいよゲームアプリケーションの実装、少し面倒
→少人数で遊ぶ、同じ画面で、相手の動きがすぐにわかる←同実装しよう、、mmoRPGかな

10/28進捗
→Canvasの描画がいまいちだったので進めようと思った
　→不定形で座標すべて一度で描画できればいいなと思ったがいろいろ調査が難航しそう
　→滞っていたpython#7を投稿、ドラッグ&ドロップで描画する程度、次回はcsvのバルクインサート
　→


■仕事調査系


■マップ
OpenAPI機能利用
→ZenDesk、zooAPI？


メモ（マップ）
登録ボタン→entryField
　どちらかというと更新、field、location
新規登録→entryNewKingdom
　こちらはマップ新規
　
★不定形を結ぶメソッド

→ぶっちゃけPC使えば可能と思う
→中抜けは少し難しい（却下）現実にも国の中に国があるのは例外中の例外
●水平判定

■■■■■■■

・領域y座標を上から順に検証していく
→横一列になっているのもをひとまとまり
→最悪複数のまとまりになっている
exこれの多角形判定→ほぼ不可能

■(0, 0)
　■■■　　　　　■■
　■■■■■　　　■■■■
　■■■■■　■■■■■■
　■■■■■■■■■■■■■
　
(1,1)→(3,1)→(3,2)→(5,2)→(5,4)→(7,4)→(7,3)→(9,3)→(9,1)→(10,1)→(10,2)→(12,2)→(12,4)→(13,4)→(1,4)

★こちらを採用
①.頂点の決定(1,1)
　→xの最小座標取得→yの最小座標を取得　

②.direct_cntを0（東）の場合
　②－1.1つ東のデータをfocus座標(x,y)に設定
　②－2.北方向にデータが存在する場合
　　②－2－1.focus座標(x,y)を配列に格納、directionを1（北）に設定
　　②－2－2.1つ北のデータをfocus座標(x,y)に設定
　②－3.南方向にデータが存在する場合
　　②－3－1.focus座標(x,y)を配列に格納、directionを3（南）に設定
　　②－3－2.1つ南のデータをfocus座標(x,y)に設定
　②－4.西方向にデータが存在する場合
　　②－4－1.focus座標(x,y)を配列に格納、directionを2（西）に設定
　　②－4－2.1つ西のデータをfocus座標(x,y)に設定
③.direct_cntを1（北）の場合
　③－1.1つ北のデータをfocus座標(x,y)に設定
　③－2.y+方向にデータが存在する場合
　　③－2－1.focus座標(x,y)を配列に格納、directionを1（北）に設定
　　③－2－2.1つ北のデータをfocus座標(x,y)に設定
・・・etc

これ、意外と冗長な処理が多かった
進行方向さえパラメータ化してしまえばそれを利用して
処理をひとまとめにできそう

createMapにデータの取得処理は実装済みだった

　　
　●×4隅分

■　
●■×4隅分

　　　
　●　×全方向4種→理論上ありえないけど、優先度１

→計算方法、1件1件だと無駄な処理が多いか？
→先に対象データを絞りたい
　→
　
　　　■
■■　■■
■■　■
■■　■
■■■■
■■■■
■

■wordpressがいかにクソかを語った人たち
https://www.lindenbaum-jp.com/spiritual/15050	

https://katariki.wordpress.com/2016/02/07/wordpress%E3%81%AF%E3%82%AF%E3%82%BD%E3%81%A7%E3%81%99/

wordpressはクソだ、
①ビジュアルエディタがなぜか表示できないwordpress.comの仕様なのか知らないが
なぜこんな風にダッシュボードに行けなくするのか、嫌がらせじゃないのか

生かしたブログ発見
https://subeniya.com/archives/3534

再利用ブロック
https://www.imamura.biz/blog/32112
これで囲み線作成したらめっちゃはかどりそう

飾り枠の追加について
直にHTMLエディタで追加しようとするとうまくいかない
カスタムHTMLを使う

データを集計して重複を間引く

MySQL初歩で引っかかってしまう
→varcharの文字数制限を設定しないと怒られる（めんどくさい）

#!/usr/bin/env python
import tkinter as tk


# 実験コード
root = tk.Tk()
c = tk.Canvas(root, width = 600, height = 200)
c.create_polygon(10,10,30,10,30,20,50,20,50,40,70,40,70,30,90,30,90,10,100,10,100,20,120,20,120,40,130,40,10,40)
c.create_polygon(285, 20, 320, 150, 220, 80, 350, 80, 250, 150, fill = '#0000ff')
c.create_polygon(485, 20, 550, 80, 520, 150, 450, 150, 420, 80, smooth = True)
c.pack()

root.mainloop()